//
// IngredientObjectItems.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** An object containing information for this specific item. */
open class IngredientObjectItems: JSONEncodable {
    /** Item name as provided by brand owner or as shown on packaging */
    public var name: String?
    public var categories: [String]?
    public var nutrients: IngredientObjectNutrients?
    public var calorieConversionFactor: BrandedFoodObjectCalorieConversionFactor?
    /** The multiplication factor used to calculate protein from nitrogen */
    public var proteinConversionFactor: BigDecimal?
    public var dietLabels: BrandedFoodObjectDietLabels?
    /** An array of objects containing the constituent parts of a food (e.g. bone is a component of meat) */
    public var components: [BrandedFoodObjectComponents]?
    /** An array of objects containing information on discrete amounts of a food found in this item */
    public var portions: [BrandedFoodObjectPortions]?
    /** Common names associated with this item. These generally clarify what the item is (e.g. when the brand name is \&quot;BRAND&#x27;s Spicy Enchilada\&quot; the common name may be \&quot;Chicken enchilada\&quot;) */
    public var commonNames: String?
    /** A description of this item */
    public var description: String?
    /** Comments on any unusual aspects of this item. Examples might include unusual aspects of the food overall. */
    public var footnote: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["name"] = self.name
        nillableDictionary["categories"] = self.categories?.encodeToJSON()
        nillableDictionary["nutrients"] = self.nutrients?.encodeToJSON()
        nillableDictionary["calorie_conversion_factor"] = self.calorieConversionFactor?.encodeToJSON()
        nillableDictionary["protein_conversion_factor"] = self.proteinConversionFactor?.encodeToJSON()
        nillableDictionary["diet_labels"] = self.dietLabels?.encodeToJSON()
        nillableDictionary["components"] = self.components?.encodeToJSON()
        nillableDictionary["portions"] = self.portions?.encodeToJSON()
        nillableDictionary["common_names"] = self.commonNames
        nillableDictionary["description"] = self.description
        nillableDictionary["footnote"] = self.footnote

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
